##1. リリースのトラッキング
- 未完成の作業は、仕掛り作業として開発プロセスの流れの途中に積み上がっていくことになる。
    - 仕掛り作業が増えれば増えるほど、新しい要求が思い浮かんでから動作するソフトウェアのフィーチャとして開発するまでの所用時間は長くなっていく。
    - これは、やがてはチーム全体のスループットを低下させてしまうのだ。
    - また、仕掛り作業が多くなってくると、開発しているものに対するフィードバックを得るタイミングが遅くなってしまう。ということは、フィードバック結果から学ぶタイミングも遅くなるということだ。
- イテレーション終了時に未完成のストーリーがあるということは、そのストーリーが大きすぎたということだ。
    - 大きなストーリーよりも小さなストーリーの方が、開発プロセスの中を安定して流れていきやすい
    - イテレーション中にストーリーを完成させられなかったのであれば、そのストーリーはもっと小さなストーリーに分割しなければならない。
        - 理想をいえば、ストーリー分割はイテレーションの開始前に済ませておくべきだ。
        - そうはいっても、イテレーションの途中でストーリーが大きすぎることに気づくこともある
        - 重要なのは、その時点でプロダクトオーナーに知らせること
- 部分的にしか完了していないストーリーをどうやってベロシティの測定に反映させればいいのだろうか
    - 本質的に重要なことは、そもそもどうして部分的にしか完成させられないストーリーになってしまったのかを考えて、同じことを二度と繰り返さずに済む方法を検討することだ
        - 見積もりが過小だったり、そもそも見積もりを忘れていた作業があったりする
            - 将来似たようなストーリーを見積もることになった場合に適切な結果を出せるように備えるのだ
        - 一回のイテレーションであまりにも多くのストーリーをこなそうとしたのが原因かもしれない
            - そうなら、イテレーションレベルでの計画づくりをもっと慎重におこなう必要がある
    - 部分的に完了したストーリーをどうやってベロシティの測定に反映させるかはそこまで重要ではない。
