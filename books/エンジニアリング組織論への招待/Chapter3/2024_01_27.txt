# スケジュールとマーケットという2つの不安
- ソフトウェアを開発する際に、方法不確実性と目的不確実性はプロダクト/プロジェクト問わず常に存在する
    - ウォーターフォールとアジャイルはこの不確実性に対するアプローチが異なる
- ウォーターフォール
    - 初期工程の計画段階において目的不確実性をできる限り減少させるアプローチ
    - スケジュール遅れを察知して計画段階をやり直す
    - 理性主義
    - プロジェクトマネジメント(終了させることが目的)
    - 
- アジャイル
    - 初期工程から最終工程まで、目的不確実性と方法不確実性の両方に対して段階的にアプローチする
    - 常に計画を更新しながら精度をあげて、大きな不確実性から優先的に対応できるようにするという思想
    - 経験主義
    - プロダクトマネジメント(終了させないことが目的)
    - ウォーターフォールが開発方式であるのに対し、アジャイルは開発方式も含んだチーム全体のメンタリングの方法論

# アジャイルをするな、アジャイルになれ
- アジャイルはするものではなく、なるもの
- アジャイルな状態とは、
    - 情報の非対称性が小さい
    - 認知の歪みが少ない
    - チームより小さい限定合理性が働かない
    - 大人リスクを取れていて心理的安全性が高い
    - 課題、不安に向き合い不確実性を効率よく削減できている
    - チーム全体のゴール認識レベルが高い

# ウォーターフォールかアジャイルか
- そもそもの対象としているスコープが異なるため比較できるものではない
    - WFがスコープとする範囲は、「方法不確実性」とそれに伴うスケジュール不安
    - アジャイルはそれに加えて「目的不確実性」とそれに伴うマーケット不安、そして継続するチームマネジメント、つまり「通信不確実性」もスコープに含む
- エンジニアリングを方法不確実性の削減と狭く捉えず、「不確実性削減のシステム」と捉える
    - アジャイルな方法論は、組織間の「限定合理性」と「情報の非対称性」の解消を試みるアプローチとも言える