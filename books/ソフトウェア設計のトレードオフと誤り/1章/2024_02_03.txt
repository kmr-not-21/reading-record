# はじめに
- ソフトウェアのデリバリーにかかわるすべての人の作業には、トレードオフが溢れている
- 意思決定の背景、別の選択肢、評価、結果、想定外のことはあったかという教訓集には、エンジニアが向き合うべき問題や決断が含まれている
- 設計における潜在的な問題や限界をあらかじめ学んでおくことで、将来の時間とお金を生み出すことができる

# 単体テストのトレードオフ
- あるメソッドをprivateにするかpublicにするか
    - privateメソッドに単体テストが必要なくらい複雑なロジックがあるときにpublicにしたくなる
        - 公開・非公開いずれにしても一長一短だが、中間の解決策としてパッケージプライベートにすることで両方解決できる
- 単体テストと結合テストどちらで担保するか
    - 単体テストは早く結果がわかるためデバッグプロセスもより速くなる
        - 一方でコンポーネント間の接続や相互作用に対するフィードバックが得られない
        - 結合テストでそれをカバーできるが、より多くの時間(コスト)がかかる
    - リソースが有限な中で、それぞれのテストの長所と短所を理解して、バランスのとれた比率を探す必要がある