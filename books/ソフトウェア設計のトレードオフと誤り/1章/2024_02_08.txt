# アーキテクチャデザインパターンのトレードオフ
- マイクロサービスの利点
    - スケーラビリティ
        - 高いトラフィックに耐えるため、需要に応じて水平方向に素早くインスタンスを拡張することができる
        - より多くのリソースを費やせば、垂直のスケールアップ(CPUやメモリやディスク増設)もできるが、柔軟性や確実性に欠ける
    - 開発スピード
        - それぞれの機能群(≒開発チーム)で独立してリリースできるため、すばやく意思決定し、コードベースを進化させられる
        - デプロイプロセスも堅牢にでき、頻繁なリリースサイクルを回すことができる
- マイクロサービスの複雑さ
    - 多くの可動部品がかかわる設計になる
        - 起動中のサービスの監視し、トラフィックを適切にルーティングするロードバランサを備える必要がある
- ある判断をするときは、「長所」「短所」「コンテキスト」の3つから考える
    - マイクロサービスの長所と短所を踏まえた上で、高いスケーラビリティが不要で開発チームも小規模だというコンテキストをに鑑みて、あえてモノリシックで開発するという選択ができる