# 例外 vs 他のエラーハンドリングパターン
- コードは、大小さまざまな原因により失敗する可能性があり、失敗した時に処理をどうするのか最初に考える必要がある
    - コードは耐障害性(フォールトトレランス)を持って、失敗を捕捉し可能な限り回復できるようにするべき
- しかし、発生する可能性があるすべてのエラーを明示的に知らせると、コードの可読性と保守性が下がる
    - すべてのエラーを回復する必要はないし、すべてに防御的プログラミングを要求する必要もない
        - "Let It Crash"(致命的な失敗は回復しない方が望ましい)
        - ただしシングルスレッドでは他ユーザーにも影響が及ぶのでそうとも限らない
- 例外処理のアプローチとトレードオフ、使いどころを知ることが大切
    - 明示的にエラーをハンドリングすべきところを見極め、より堅牢でより説明的な設計にすることができる