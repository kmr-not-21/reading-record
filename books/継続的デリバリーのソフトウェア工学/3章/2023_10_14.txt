##3.4 ソフトウェア工学という研究分野の基礎
- 基本概念にはカテゴリーがふたつある
    - プロセス、あるいは哲学的なアプローチ
        - 学びのエキスパート
            - ソフトウェア工学は創造的な設計工学であって、製造工学とは無関係だということを認識して、探索・発見・学びのスキルを身につける
    - テクニック、設計的なアプローチ
        - 複雑さ管理のエキスパート
            - 大勢が関わる大規模なシステムをつくるために、技術的なレベルでも組織的なレベルでもこのような形の作業に適応するためのスキルを身につける

##3.5 学びのエキスパート
- 実用科学的な問題解決アプローチで、ソフトウェアの問題に特化したものになる
    - ほかの工学分野と違い、ソフトウェア工学は実用的でフットワークの軽いものでなければならない
- このカテゴリーには5つの相互に関連しあった行動様式がある
    - 反復的な作業
    - 早くて高品質なフィードバック
    - 漸進的な仕事の進め方
    - 実験主義であること
    - 敬虔主義であること
- ソフトウェア開発は、探索と発見の連続
    - 顧客やユーザーがシステムに何を求めているのか、問題をより適切に解くために、ツールやテクニックをよりうまく使うために、よりよい仕事をするための開発組織は何か

##3.6 複雑さ管理のエキスパート
- 並行処理とカップリング(結合度)という情報科学のふたつの概念が、ソフトウェア設計だけでなく組織の運営にも適用できる
    - 人間の組織は、コンピュータシステムと同じような情報システム
    - ひとつの小規模なチームよりも少しでも大きな規模で複雑さを管理したいなら、よりテクニカルなソフトウェアの情報システムと同じように人間の組織というじ情報システムの複雑さを管理する必要がある
- ソフトウェア産業は、これにほとんど注意を払っていない感じがする
    - 手に負えなくなった技術的負債
    - 絶望的な数のバグ
    - 自分のシステムに変更を加えることを怖がる開発組織
- 複雑さが手に負えなくなる可能性にもっともっと警戒し、その管理に力を注ぎ、注意を払いながら前進すべき
    - モジュラー生
    - 凝集度(一体性)
    - 関心の分離
    - 情報隠蔽/抽象化
    - カップリング